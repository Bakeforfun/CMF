library(fGarch)
library(tseries)
Sys.setlocale("LC_ALL","English")
Sys.setlocale("LC_ALL","English")
##### Loading data #####
tickers = c("AAPL","GOOGL") # specify the tickers to load
e <- new.env() # environment where data will be stored
options("getSymbols.warning4.0"=FALSE) # suppress warning about future change in the function behaviour
getSymbols(tickers, src = "yahoo", from="2014-01-01", env=e) # load data from Yahoo Finance
getSymbols(tickers, src = "yahoo", from="2014-01-01", env=e) # load data from Yahoo Finance
getSymbols(tickers, src = "yahoo", from="2014-01-01", env=e) # load data from Yahoo Finance
getSymbols(tickers, src = "yahoo", from="2015-01-01", env=e) # load data from Yahoo Finance
getSymbols(tickers, src = "google", from="2014-01-01", env=e) # load data from Yahoo Finance
data = do.call(merge, eapply(e, Ad)[tickers]) # merge data into a single xts taking only adjusted prices
x=getSymbols(tickers, src = "google", from="2014-01-01", env=e) # load data from Yahoo Finance
x
getSymbols(tickers, src = "google", from="2014-01-01") # load data from Yahoo Finance
head(AAPL)
rm(AAPL,GOOGL)
getSymbols(tickers, src = "google", from="2014-01-01", env=e) # load data from Yahoo Finance
data = do.call(merge, eapply(e, Cl)[tickers]) # merge data into a single xts taking only adjusted prices
names(data) = tickers
head(data)
plot(data$AAPL)
plot(data$GOOGL)
tail(data$GOOGL, 50)
tickers = c("SPY","DIA") # specify the tickers to load
e <- new.env() # environment where data will be stored
options("getSymbols.warning4.0"=FALSE) # suppress warning about future change in the function behaviour
getSymbols(tickers, src = "google", from="2014-01-01", env=e) # load data from Yahoo Finance
data = do.call(merge, eapply(e, Cl)[tickers]) # merge data into a single xts taking only adjusted prices
names(data) = tickers
plot(data$SPY
)
plot(data$DIA)
tail(data$DIA,50)
tail(data$DIA,100)
rets = apply(data, 2, function(x) diff(x)/x[-length(x)])
rets = xts(rets, order.by = index(data)[-1])
head(rets)
ArchTest(rets$SPY,lags=12)
ArchTest(rets$DIA,lags=12)
ArchTest(rets$SPY,lags=1)
ArchTest(rets$SPY,lags=2)
ArchTest(rets$SPY,lags=20)
ArchTest(rets$SPY,lags=200)
rets.gfit <- garchFit(formula=~aparch(1,1),data=rets,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.6,include.shape=FALSE,trace=FALSE)
rets.gfit <- garchFit(formula=~aparch(1,1),data=rets$SPY,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.6,include.shape=FALSE,trace=FALSE)
plot(rets.gfit,which=13)
plot(rets.gfit,which=10)
SPY.gfit <- garchFit(formula=~aparch(1,1),data=rets$SPY,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.6,include.shape=FALSE,trace=FALSE)
plot(SPY.gfit,which=13)
plot(DIA.gfit,which=10)
SPY.gfit <- garchFit(formula=~aparch(1,1),data=rets$SPY,delta=2,
include.delta=FALSE,leverage=FALSE,cond.dist="sged",
shape=1.6,include.shape=FALSE,trace=FALSE)
plot(SPY.gfit,which=13)
SPY.gfit <- garchFit(formula=~aparch(1,1),data=rets$SPY,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.6,include.shape=FALSE,trace=FALSE)
plot(SPY.gfit,which=13)
SPY.gfit <- garchFit(formula=~aparch(1,1),data=rets$SPY,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.25,include.shape=FALSE,trace=FALSE)
plot(SPY.gfit,which=13)
SPY.gfit <- garchFit(formula=~aparch(1,1),data=rets$SPY,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.65,include.shape=FALSE,trace=FALSE)
plot(SPY.gfit,which=13)
plot(DIA.gfit,which=10)
plot(SPY.gfit,which=10)
SPY.gfit <- garchFit(formula=~aparch(1,1),data=rets$SPY,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.55,include.shape=FALSE,trace=FALSE)
plot(SPY.gfit,which=13)
plot(SPY.gfit,which=10)
SPY.gfit <- garchFit(formula=~aparch(1,1),data=rets$SPY,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.6,include.shape=FALSE,trace=FALSE)
plot(SPY.gfit,which=13)
plot(SPY.gfit,which=10)
DIA.gfit <- garchFit(formula=~aparch(1,1),data=rets$DIA,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.6,include.shape=FALSE,trace=FALSE)
plot(DIA.gfit,which=13)
plot(DIA.gfit,which=10)
DIA.gfit <- garchFit(formula=~aparch(1,1),data=rets$DIA,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.2,include.shape=FALSE,trace=FALSE)
plot(DIA.gfit,which=13)
#DIA
DIA.gfit <- garchFit(formula=~aparch(1,1),data=rets$DIA,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=15,include.shape=FALSE,trace=FALSE)
plot(DIA.gfit,which=13)
DIA.gfit <- garchFit(formula=~aparch(1,1),data=rets$DIA,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.5,include.shape=FALSE,trace=FALSE)
plot(DIA.gfit,which=13)
SPY.gfit <- garchFit(formula=~aparch(1,1),data=rets$SPY,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.6,include.shape=FALSE,trace=FALSE)
plot(SPY.gfit,which=13)
DIA.gfit <- garchFit(formula=~aparch(1,1),data=rets$DIA,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.5,include.shape=FALSE,trace=FALSE)
plot(DIA.gfit,which=13)
DIA.gfit <- garchFit(formula=~aparch(1,1),data=rets$DIA,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.6,include.shape=FALSE,trace=FALSE)
plot(DIA.gfit,which=13)
DIA.gfit <- garchFit(formula=~aparch(1,1),data=rets$DIA,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.5,include.shape=TRU,trace=FALSE)
plot(DIA.gfit,which=13)
DIA.gfit <- garchFit(formula=~aparch(1,1),data=rets$DIA,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.5,include.shape=TRUE,trace=FALSE)
plot(DIA.gfit,which=13)
DIA.gfit <- garchFit(formula=~aparch(1,1),data=rets$DIA,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.25,include.shape=TRUE,trace=FALSE)
plot(DIA.gfit,which=13)
#DIA
DIA.gfit <- garchFit(formula=~aparch(1,1),data=rets$DIA,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.25,include.shape=TRUE,trace=FALSE)
plot(DIA.gfit,which=13)
SPY.gfit <- garchFit(formula=~aparch(1,1),data=rets$SPY,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.6,include.shape=TRUE,trace=FALSE)
plot(SPY.gfit,which=13)
SPY.gfit <- garchFit(formula=~aparch(1,1),data=rets$SPY,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.2,include.shape=TRUE,trace=FALSE)
plot(SPY.gfit,which=13)
SPY.gfit <- garchFit(formula=~aparch(1,1),data=rets$SPY,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.2,include.shape=TRUE,trace=FALSE)
plot(SPY.gfit,which=13)
#DIA
DIA.gfit <- garchFit(formula=~aparch(1,1),data=rets$DIA,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.2,include.shape=TRUE,trace=FALSE)
plot(DIA.gfit,which=13)
SPY.gfit <- garchFit(formula=~aparch(1,1),data=rets$SPY,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.2,include.shape=TRUE,trace=FALSE)
plot(SPY.gfit,which=13)
DIA.gfit <- garchFit(formula=~aparch(1,1),data=rets$DIA,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.2,include.shape=TRUE,trace=FALSE)
plot(DIA.gfit,which=13)
plot(DIA.gfit,which=10)
plot(SPY.gfit,which=10)
adf.test(rets$SPY)
adf.test(rets$DIA)
pp.test(rets$SPY)
pp.test(rets$DIA)
kpss.test(rets$SPY, null="Level")
kpss.test(rets$DIA, null="Level")
z <- matrix(nrow=length(ret$SPY),ncol=2)
z <- matrix(nrow=length(rets$SPY),ncol=2)
z[,1] <- SPY.gfit@residuals / SPY.gfit@sigma.t
z[,2] <- DIA.gfit@residuals / DIA.gfit@sigma.t
plot(z[,1])
plot(z[,2])
mean <- c(0,0); sd <- c(1,1); nu <- c(1.25,1.3)
xi <- c(1, SPY.gfit@fit$par["skew"])
xi
xi <- c(1, DIA.gfit@fit$par["skew"])
xi
1.3/1.25
1.25/1.3
mean <- c(0,0); sd <- c(1,1); nu <- c(1.2,1.2)
xi <- c(1, SPY.gfit@fit$par["skew"])
xi
xi <- c(1, DIA.gfit@fit$par["skew"])
xi
SPY.gfit <- garchFit(formula=~aparch(1,1),data=rets$SPY,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="ged",
shape=1.2,include.shape=TRUE,trace=FALSE)
plot(SPY.gfit,which=13)
xi <- c(1, SPY.gfit@fit$par["skew"])
xi
xi <- c(SPY.gfit@fit$par["skew"], DIA.gfit@fit$par["skew"])
xi
#SPY
SPY.gfit <- garchFit(formula=~aparch(1,1),data=rets$SPY,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.2,include.shape=TRUE,trace=FALSE)
plot(SPY.gfit,which=13)
plot(SPY.gfit,which=10)
#DIA
DIA.gfit <- garchFit(formula=~aparch(1,1),data=rets$DIA,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.2,include.shape=TRUE,trace=FALSE)
plot(DIA.gfit,which=13)
plot(DIA.gfit,which=10)
##### Stationarity tests #####
adf.test(rets$SPY)
adf.test(rets$DIA)
pp.test(rets$SPY)
pp.test(rets$DIA)
kpss.test(rets$SPY, null="Level")
kpss.test(rets$DIA, null="Level")
##### Standardized residuals #####
z <- matrix(nrow=length(rets$SPY),ncol=2)
z[,1] <- SPY.gfit@residuals / SPY.gfit@sigma.t
z[,2] <- DIA.gfit@residuals / DIA.gfit@sigma.t
##### Residuals partial distributions #####
mean <- c(0,0); sd <- c(1,1); nu <- c(1.2,1.2)
xi <- c(SPY.gfit@fit$par["skew"], DIA.gfit@fit$par["skew"])
xi
cdf <- matrix(nrow=T,ncol=2)
for (i in 1:2) cdf[,i] <- psged(z[,i],mean=mean[i],
sd=sd[i],nu=nu[i],xi=xi[i])
for (i in 1:2) cdf[,i] <- psged(z[,i],mean=mean[i],
sd=sd[i],nu=nu[i],xi=xi[i])
?psged
z
tail(z)
##### Standardized residuals #####
z <- matrix(nrow=length(SPY.gfit@residuals),ncol=2)
z[,1] <- SPY.gfit@residuals / SPY.gfit@sigma.t
z[,2] <- DIA.gfit@residuals / DIA.gfit@sigma.t
##### Residuals partial distributions #####
mean <- c(0,0); sd <- c(1,1); nu <- c(1.2,1.2)
xi <- c(SPY.gfit@fit$par["skew"], DIA.gfit@fit$par["skew"])
cdf <- matrix(nrow=T,ncol=2)
for (i in 1:2) cdf[,i] <- psged(z[,i],mean=mean[i],
sd=sd[i],nu=nu[i],xi=xi[i])
cdf <- matrix(nrow=rets$SPY,ncol=2)
for (i in 1:2) cdf[,i] <- psged(z[,i],mean=mean[i],
sd=sd[i],nu=nu[i],xi=xi[i])
cdf
for (i in 1:2) cdf[,i] <- psged(z[,i],mean=mean[i],
sd=sd[i],nu=nu[i],xi=xi[i])
cdf
psged(z[,i],mean=mean[i],
sd=sd[i],nu=nu[i],xi=xi[i])
cdf <- matrix(nrow=rets$SPY,ncol=2)
for (i in 1:2) cdf[,i] <- psged(z[,i],mean=mean[i],
sd=sd[i],nu=nu[i],xi=xi[i])
cdf
i=1
psged(z[,i],mean=mean[i],
sd=sd[i],nu=nu[i],xi=xi[i])
i=2
psged(z[,i],mean=mean[i],
sd=sd[i],nu=nu[i],xi=xi[i])
for (i in 1:2) cdf[,i] = psged(z[,i],mean=mean[i],sd=sd[i],nu=nu[i],xi=xi[i])
cdf
i=1
cdf[,i] = psged(z[,i],mean=mean[i],sd=sd[i],nu=nu[i],xi=xi[i])
cdf
cdf[,1] = psged(z[,1],mean=mean[1],sd=sd[1],nu=nu[1],xi=xi[1])
cdf
x = psged(z[,1],mean=mean[1],sd=sd[1],nu=nu[1],xi=xi[1])
x
cdf[,1]=x
cdf[,1]
cdf <- matrix(nrow=rets$SPY,ncol=2)
cdf[,1]=x
cdf[,2]=x
cdf
rm(cdf)
for (i in 1:2) cdf[,i] = psged(z[,i],mean=mean[i],sd=sd[i],nu=nu[i],xi=xi[i])
cdf <- matrix(nrow=rets$SPY,ncol=2)
for (i in 1:2) cdf[,i] = psged(z[,i],mean=mean[i],sd=sd[i],nu=nu[i],xi=xi[i])
cdf
cdf <- matrix(nrow=length(rets$SPY),ncol=2)
for (i in 1:2) cdf[,i] = psged(z[,i],mean=mean[i],sd=sd[i],nu=nu[i],xi=xi[i])
cdf
norm.fit <- fitCopula(cdf,copula=norm.cop)
##### Initialise copulas #####
norm.cop <- normalCopula(dim=2,param=0.5,dispstr="un")
stud.cop <- tCopula(dim=2,param=0.5,df=5,df.fixed=TRUE,dispstr="un")
gumb.cop <- gumbelCopula(dim=2,param=2)
clay.cop <- claytonCopula(dim=2,param=2)
##### Fit copulas #####
norm.fit <- fitCopula(cdf,copula=norm.cop)
stud.fit <- fitCopula(cdf,copula=stud.cop)
gumb.fit <- fitCopula(cdf,copula=gumb.cop)
clay.fit <- fitCopula(cdf,copula=clay.cop)
norm.fit
summary(norm.fit)
summary(stud.fit)
summary(gumb.fit)
summary(clay.fit)
N
N = 100000
cdf.sim <- rcopula(n=N,copula=stud.fit@copula)
z.sim <- matrix(nrow=N,ncol=2)
for (i in 1:2) z.sim[,i] <- qsged(cdf.sim[,i],
mean=mean[i],sd=sd[i],nu=nu[i],xi=xi[i])
frc1 <- predict(SPY.gfit,n.ahead=1)
frc2 <- predict(DIA.gfit,n.ahead=1)
mu <- c(frc1[,1],frc2[,1])
sigma <- c(frc1[,3],frc2[,3])
##### Modelled portfolio returns #####
prt.sim <- w[1]*(mu[1]+sigma[1]*z.sim[,1]) +
w[2]*(mu[2]+sigma[2]*z.sim[,2])
w = c(0.5, 0,5)
prt.sim <- w[1]*(mu[1]+sigma[1]*z.sim[,1]) +
w[2]*(mu[2]+sigma[2]*z.sim[,2])
prt.sim
##### VaR and ES #####
alpha <- 0.10
prt.sim <- sort(prt.sim)
VaR <- prt.sim[alpha*N]
ES <- mean(prt.sim[1:(alpha*N-1)])
VaR
ES
##### Calculate VaR curve #####
VaR_curve <- numeric()
h <- 0.5 * 260 # window length
for (i in (h+1):length(rets[,1]))
{
h.rets <- rets[(i-h):(i-1),]
SPY.gfit <- garchFit(formula=~aparch(1,1),data=h.rets$SPY,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.2,include.shape=TRUE,trace=FALSE)
DIA.gfit <- garchFit(formula=~aparch(1,1),data=h.rets$DIA,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.2,include.shape=TRUE,trace=FALSE)
z <- matrix(nrow=length(h.rets$SPY),ncol=2)
z[,1] <- SPY.gfit@residuals / SPY.gfit@sigma.t
z[,2] <- DIA.gfit@residuals / DIA.gfit@sigma.t
mean <- c(0,0); sd <- c(1,1); nu <- c(1.2,1.2)
xi <- c(SPY.gfit@fit$par["skew"], DIA.gfit@fit$par["skew"])
cdf <- matrix(nrow=length(h.rets$SPY),ncol=2)
for (i in 1:2) cdf[,i] = psged(z[,i],mean=mean[i],sd=sd[i],nu=nu[i],xi=xi[i])
stud.fit <- fitCopula(cdf,copula=stud.cop)
N = 100000
cdf.sim <- rcopula(n=N,copula=stud.fit@copula)
z.sim <- matrix(nrow=N,ncol=2)
for (i in 1:2) z.sim[,i] <- qsged(cdf.sim[,i],
mean=mean[i],sd=sd[i],nu=nu[i],xi=xi[i])
frc1 <- predict(SPY.gfit,n.ahead=1)
frc2 <- predict(DIA.gfit,n.ahead=1)
mu <- c(frc1[,1],frc2[,1])
sigma <- c(frc1[,3],frc2[,3])
h.prt.sim <- w[1]*(mu[1]+sigma[1]*z.sim[,1]) +
w[2]*(mu[2]+sigma[2]*z.sim[,2])
h.prt.sim <- sort(prt.sim)
VaR_curve[i-h] <- h.prt.sim[alpha*N]
}
warnings()
i=1
h.rets <- rets[(i-h):(i-1),]
SPY.gfit <- garchFit(formula=~aparch(1,1),data=h.rets$SPY,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.2,include.shape=TRUE,trace=FALSE)
DIA.gfit <- garchFit(formula=~aparch(1,1),data=h.rets$DIA,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.2,include.shape=TRUE,trace=FALSE)
z <- matrix(nrow=length(h.rets$SPY),ncol=2)
z[,1] <- SPY.gfit@residuals / SPY.gfit@sigma.t
z[,2] <- DIA.gfit@residuals / DIA.gfit@sigma.t
mean <- c(0,0); sd <- c(1,1); nu <- c(1.2,1.2)
xi <- c(SPY.gfit@fit$par["skew"], DIA.gfit@fit$par["skew"])
cdf <- matrix(nrow=length(h.rets$SPY),ncol=2)
for (i in 1:2) cdf[,i] = psged(z[,i],mean=mean[i],sd=sd[i],nu=nu[i],xi=xi[i])
stud.fit <- fitCopula(cdf,copula=stud.cop)
N = 100000
cdf.sim <- rcopula(n=N,copula=stud.fit@copula)
z.sim <- matrix(nrow=N,ncol=2)
for (i in 1:2) z.sim[,i] <- qsged(cdf.sim[,i],
mean=mean[i],sd=sd[i],nu=nu[i],xi=xi[i])
frc1 <- predict(SPY.gfit,n.ahead=1)
frc2 <- predict(DIA.gfit,n.ahead=1)
mu <- c(frc1[,1],frc2[,1])
sigma <- c(frc1[,3],frc2[,3])
h.prt.sim <- w[1]*(mu[1]+sigma[1]*z.sim[,1]) +
w[2]*(mu[2]+sigma[2]*z.sim[,2])
h.prt.sim <- sort(prt.sim)
VaR_curve[i-h] <- h.prt.sim[alpha*N]
VaR_curve
i=130
h.rets <- rets[(i-h):(i-1),]
SPY.gfit <- garchFit(formula=~aparch(1,1),data=h.rets$SPY,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.2,include.shape=TRUE,trace=FALSE)
DIA.gfit <- garchFit(formula=~aparch(1,1),data=h.rets$DIA,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.2,include.shape=TRUE,trace=FALSE)
z <- matrix(nrow=length(h.rets$SPY),ncol=2)
z[,1] <- SPY.gfit@residuals / SPY.gfit@sigma.t
z[,2] <- DIA.gfit@residuals / DIA.gfit@sigma.t
mean <- c(0,0); sd <- c(1,1); nu <- c(1.2,1.2)
xi <- c(SPY.gfit@fit$par["skew"], DIA.gfit@fit$par["skew"])
cdf <- matrix(nrow=length(h.rets$SPY),ncol=2)
for (i in 1:2) cdf[,i] = psged(z[,i],mean=mean[i],sd=sd[i],nu=nu[i],xi=xi[i])
stud.fit <- fitCopula(cdf,copula=stud.cop)
N = 100000
cdf.sim <- rcopula(n=N,copula=stud.fit@copula)
z.sim <- matrix(nrow=N,ncol=2)
for (i in 1:2) z.sim[,i] <- qsged(cdf.sim[,i],
mean=mean[i],sd=sd[i],nu=nu[i],xi=xi[i])
frc1 <- predict(SPY.gfit,n.ahead=1)
frc2 <- predict(DIA.gfit,n.ahead=1)
mu <- c(frc1[,1],frc2[,1])
sigma <- c(frc1[,3],frc2[,3])
h.prt.sim <- w[1]*(mu[1]+sigma[1]*z.sim[,1]) +
w[2]*(mu[2]+sigma[2]*z.sim[,2])
h.prt.sim <- sort(prt.sim)
VaR_curve[i-h] <- h.prt.sim[alpha*N]
i=131
h.rets <- rets[(i-h):(i-1),]
SPY.gfit <- garchFit(formula=~aparch(1,1),data=h.rets$SPY,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.2,include.shape=TRUE,trace=FALSE)
DIA.gfit <- garchFit(formula=~aparch(1,1),data=h.rets$DIA,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.2,include.shape=TRUE,trace=FALSE)
z <- matrix(nrow=length(h.rets$SPY),ncol=2)
z[,1] <- SPY.gfit@residuals / SPY.gfit@sigma.t
z[,2] <- DIA.gfit@residuals / DIA.gfit@sigma.t
mean <- c(0,0); sd <- c(1,1); nu <- c(1.2,1.2)
xi <- c(SPY.gfit@fit$par["skew"], DIA.gfit@fit$par["skew"])
cdf <- matrix(nrow=length(h.rets$SPY),ncol=2)
for (i in 1:2) cdf[,i] = psged(z[,i],mean=mean[i],sd=sd[i],nu=nu[i],xi=xi[i])
stud.fit <- fitCopula(cdf,copula=stud.cop)
N = 100000
cdf.sim <- rcopula(n=N,copula=stud.fit@copula)
z.sim <- matrix(nrow=N,ncol=2)
for (i in 1:2) z.sim[,i] <- qsged(cdf.sim[,i],
mean=mean[i],sd=sd[i],nu=nu[i],xi=xi[i])
frc1 <- predict(SPY.gfit,n.ahead=1)
frc2 <- predict(DIA.gfit,n.ahead=1)
mu <- c(frc1[,1],frc2[,1])
sigma <- c(frc1[,3],frc2[,3])
h.prt.sim <- w[1]*(mu[1]+sigma[1]*z.sim[,1]) +
w[2]*(mu[2]+sigma[2]*z.sim[,2])
h.prt.sim <- sort(prt.sim)
VaR_curve[i-h] <- h.prt.sim[alpha*N]
VaR_curve
i=131
h.rets <- rets[(i-h):(i-1),]
SPY.gfit <- garchFit(formula=~aparch(1,1),data=h.rets$SPY,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.2,include.shape=TRUE,trace=FALSE)
DIA.gfit <- garchFit(formula=~aparch(1,1),data=h.rets$DIA,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.2,include.shape=TRUE,trace=FALSE)
z <- matrix(nrow=length(h.rets$SPY),ncol=2)
z[,1] <- SPY.gfit@residuals / SPY.gfit@sigma.t
z[,2] <- DIA.gfit@residuals / DIA.gfit@sigma.t
mean <- c(0,0); sd <- c(1,1); nu <- c(1.2,1.2)
xi <- c(SPY.gfit@fit$par["skew"], DIA.gfit@fit$par["skew"])
cdf <- matrix(nrow=length(h.rets$SPY),ncol=2)
for (j in 1:2) cdf[,j] = psged(z[,j],mean=mean[j],sd=sd[j],nu=nu[j],xi=xi[j])
stud.fit <- fitCopula(cdf,copula=stud.cop)
N = 100000
cdf.sim <- rcopula(n=N,copula=stud.fit@copula)
z.sim <- matrix(nrow=N,ncol=2)
for (j in 1:2) z.sim[,j] <- qsged(cdf.sim[,j],
mean=mean[j],sd=sd[j],nu=nu[j],xi=xi[j])
frc1 <- predict(SPY.gfit,n.ahead=1)
frc2 <- predict(DIA.gfit,n.ahead=1)
mu <- c(frc1[,1],frc2[,1])
sigma <- c(frc1[,3],frc2[,3])
h.prt.sim <- w[1]*(mu[1]+sigma[1]*z.sim[,1]) +
w[2]*(mu[2]+sigma[2]*z.sim[,2])
h.prt.sim <- sort(prt.sim)
VaR_curve[i-h] <- h.prt.sim[alpha*N]
VaR_curve
VaR_curve <- numeric()
h <- 0.5 * 260 # window length
for (i in (h+1):length(rets[,1]))
{
h.rets <- rets[(i-h):(i-1),]
SPY.gfit <- garchFit(formula=~aparch(1,1),data=h.rets$SPY,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.2,include.shape=TRUE,trace=FALSE)
DIA.gfit <- garchFit(formula=~aparch(1,1),data=h.rets$DIA,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.2,include.shape=TRUE,trace=FALSE)
z <- matrix(nrow=length(h.rets$SPY),ncol=2)
z[,1] <- SPY.gfit@residuals / SPY.gfit@sigma.t
z[,2] <- DIA.gfit@residuals / DIA.gfit@sigma.t
mean <- c(0,0); sd <- c(1,1); nu <- c(1.2,1.2)
xi <- c(SPY.gfit@fit$par["skew"], DIA.gfit@fit$par["skew"])
cdf <- matrix(nrow=length(h.rets$SPY),ncol=2)
for (j in 1:2) cdf[,j] = psged(z[,j],mean=mean[j],sd=sd[j],nu=nu[j],xi=xi[j])
stud.fit <- fitCopula(cdf,copula=stud.cop)
N = 100000
cdf.sim <- rcopula(n=N,copula=stud.fit@copula)
z.sim <- matrix(nrow=N,ncol=2)
for (j in 1:2) z.sim[,j] <- qsged(cdf.sim[,j],
mean=mean[j],sd=sd[j],nu=nu[j],xi=xi[j])
frc1 <- predict(SPY.gfit,n.ahead=1)
frc2 <- predict(DIA.gfit,n.ahead=1)
mu <- c(frc1[,1],frc2[,1])
sigma <- c(frc1[,3],frc2[,3])
h.prt.sim <- w[1]*(mu[1]+sigma[1]*z.sim[,1]) +
w[2]*(mu[2]+sigma[2]*z.sim[,2])
h.prt.sim <- sort(prt.sim)
VaR_curve[i-h] <- h.prt.sim[alpha*N]
}
VaR_curve
fact <- prt[(h+1):length(prt[,1]),1]*h.w[,1] + prt[(h+1):length(prt[,2]),2]*h.w[,2]
fact <- prt.sim[(h+1):length(prt.sim[,1])]
fact <- prt.sim[(h+1):length(prt.sim)]
plot(as.numeric(fact),type="l", ylab = "Return")
