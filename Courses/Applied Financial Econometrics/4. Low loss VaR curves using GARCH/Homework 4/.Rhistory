library(quantmod)
library(ggplot2)
library(ghyp)
library(FinTS)
library(copula)
library(fGarch)
?ArchTest
?garchFit
# tickers = c("AAPL","GOOGL") # specify the tickers to load
tickers = c("SPY") # specify the tickers to load
e <- new.env() # environment where data will be stored
options("getSymbols.warning4.0"=FALSE) # suppress warning about future change in the function behaviour
getSymbols(tickers, src = "yahoo", from="2014-01-01", env=e) # load data from Yahoo Finance
data = do.call(merge, eapply(e, Ad)[tickers]) # merge data into a single xts taking only adjusted prices
names(data) = tickers
##### Calculate returns #####
rets = apply(data, 2, function(x) diff(x)/x[-length(x)])
rets = xts(rets, order.by = index(data)[-1])
##### LM-test #####
ArchTest(rets$SPY,lags=12)
##### GARCH modelling #####
rets.gfit <- garchFit(formula=~aparch(1,1),data=rets,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.25,include.shape=FALSE,trace=FALSE)
plot(rets.gfit,which=13)
rets.gfit <- garchFit(formula=~aparch(1,1),data=rets,delta=3,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.25,include.shape=FALSE,trace=FALSE)
plot(rets.gfit,which=13)
rets.gfit <- garchFit(formula=~aparch(1,1),data=rets,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="ged",
shape=1.25,include.shape=FALSE,trace=FALSE)
plot(rets.gfit,which=13)
##### GARCH modelling #####
rets.gfit <- garchFit(formula=~aparch(1,1),data=rets,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="norm",
shape=1.25,include.shape=FALSE,trace=FALSE)
plot(rets.gfit,which=13)
##### GARCH modelling #####
rets.gfit <- garchFit(formula=~aparch(1,1),data=rets,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="snorm",
shape=1.25,include.shape=FALSE,trace=FALSE)
plot(rets.gfit,which=13)
rets.gfit <- garchFit(formula=~aparch(1,1),data=rets,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="std",
shape=1.25,include.shape=FALSE,trace=FALSE)
plot(rets.gfit,which=13)
rets.gfit <- garchFit(formula=~aparch(1,1),data=rets,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="std",
shape=1.25,include.shape=FALSE,trace=FALSE)
plot(rets.gfit,which=13)
rets.gfit <- garchFit(formula=~aparch(1,1),data=rets,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.25,include.shape=FALSE,trace=FALSE)
plot(rets.gfit,which=13)
rets.gfit <- garchFit(formula=~aparch(1,1),data=rets,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="std",
include.shape=FALSE,trace=FALSE)
plot(rets.gfit,which=13)
rets.gfit <- garchFit(formula=~aparch(1,1),data=rets,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.25,include.shape=FALSE,trace=FALSE)
plot(rets.gfit,which=13)
plot(rets.gfit,which=10)
rets.gfit <- garchFit(formula=~aparch(2,1),data=rets,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.25,include.shape=FALSE,trace=FALSE)
plot(rets.gfit,which=13)
rets.gfit <- garchFit(formula=~aparch(1,1),data=rets,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.25,include.shape=FALSE,trace=FALSE)
plot(rets.gfit,which=13)
rets.gfit <- garchFit(formula=~aparch(1,2),data=rets,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.25,include.shape=FALSE,trace=FALSE)
plot(rets.gfit,which=13)
rets.gfit <- garchFit(formula=~aparch(1,3),data=rets,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.25,include.shape=FALSE,trace=FALSE)
plot(rets.gfit,which=13)
rets.gfit <- garchFit(formula=~aparch(2,2),data=rets,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.25,include.shape=FALSE,trace=FALSE)
plot(rets.gfit,which=13)
rets.gfit <- garchFit(formula=~aparch(3,2),data=rets,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.25,include.shape=FALSE,trace=FALSE)
plot(rets.gfit,which=13)
rets.gfit <- garchFit(formula=~aparch(3,3),data=rets,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.25,include.shape=FALSE,trace=FALSE)
plot(rets.gfit,which=13)
rets.gfit <- garchFit(formula=~aparch(1,1),data=rets,delta=2,
include.delta=TRUE,leverage=TRUE,cond.dist="sged",
shape=1.25,include.shape=FALSE,trace=FALSE)
plot(rets.gfit,which=13)
rets.gfit <- garchFit(formula=~aparch(1,1),data=rets,delta=2,
include.delta=FALSE,leverage=FALSE,cond.dist="sged",
shape=1.25,include.shape=FALSE,trace=FALSE)
plot(rets.gfit,which=13)
rets.gfit <- garchFit(formula=~aparch(3,3),data=rets,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.25,include.shape=FALSE,trace=FALSE)
plot(rets.gfit,which=13)
rets.gfit <- garchFit(formula=~aparch(1,1),data=rets,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=2,include.shape=FALSE,trace=FALSE)
plot(rets.gfit,which=13)
rets.gfit <- garchFit(formula=~aparch(1,1),data=rets,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1,include.shape=FALSE,trace=FALSE)
plot(rets.gfit,which=13)
rets.gfit <- garchFit(formula=~aparch(1,1),data=rets,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=3,include.shape=FALSE,trace=FALSE)
plot(rets.gfit,which=13)
rets.gfit <- garchFit(formula=~aparch(1,1),data=rets,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=2.5,include.shape=FALSE,trace=FALSE)
plot(rets.gfit,which=13)
rets.gfit <- garchFit(formula=~aparch(1,1),data=rets,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=5,include.shape=FALSE,trace=FALSE)
plot(rets.gfit,which=13)
rets.gfit <- garchFit(formula=~aparch(1,1),data=rets,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=2,include.shape=FALSE,trace=FALSE)
plot(rets.gfit,which=13)
rets.gfit <- garchFit(formula=~aparch(1,1),data=rets,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.25,include.shape=FALSE,trace=FALSE)
plot(rets.gfit,which=13)
rets.gfit <- garchFit(formula=~aparch(1,1),data=rets,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1,include.shape=FALSE,trace=FALSE)
plot(rets.gfit,which=13)
rets.gfit <- garchFit(formula=~aparch(1,1),data=rets,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.75,include.shape=FALSE,trace=FALSE)
plot(rets.gfit,which=13)
rets.gfit <- garchFit(formula=~aparch(1,1),data=rets,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.8,include.shape=FALSE,trace=FALSE)
plot(rets.gfit,which=13)
rets.gfit <- garchFit(formula=~aparch(1,1),data=rets,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.6,include.shape=FALSE,trace=FALSE)
plot(rets.gfit,which=13)
rets.gfit <- garchFit(formula=~aparch(1,1),data=rets,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.5,include.shape=FALSE,trace=FALSE)
plot(rets.gfit,which=13)
6
rets.gfit <- garchFit(formula=~aparch(1,1),data=rets,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.6,include.shape=FALSE,trace=FALSE)
plot(rets.gfit,which=13)
##### GARCH modelling #####
rets.gfit <- garchFit(formula=~aparch(1,1),data=rets,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.6,include.shape=FALSE,trace=FALSE)
plot(rets.gfit,which=13)
plot(rets.gfit,which=10)
rets.gfit <- garchFit(formula=~aparch(1,1),data=rets,delta=2,
include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.7,include.shape=FALSE,trace=FALSE)
plot(rets.gfit,which=13)
plot(rets.gfit,which=10)
install.packages("tseries")
library(tseries)
adf.test(rets)
# PP-тест
pp.test(rets)
# KPSS-тест
kpss.test(rets, null="Level")
rets.frc <- predict(dax.gfit,n.ahead=i)
rets.frc <- predict(rets.gfit,n.ahead=i)
i = 1
rets.frc <- predict(rets.gfit,n.ahead=i)
rets.frc[,1] # вектор средних
rets.frc[,3]^2 # вектор дисперсий
# расчёт границы потерь
alpha <- 0.05
VaR <- dax.frc[1,1]+dax.frc[1,3]*qged(alpha,mean=0,sd=1, nu=dax.gfit@fit$par["shape"])
# расчёт границы потерь
alpha <- 0.05
VaR <- rets.frc[1,1]+rets.frc[1,3]*qged(alpha,mean=0,sd=1, nu=rets.gfit@fit$par["shape"])
VaR
rets.gfit@fit$par["shape"]
rets.gfit@fit
rets.gfit@fit$par["shape"]
rets.gfit@fit$par["skew"]
T1 <- 6*260; T2 <- T - T1 # обучающая и экзаменующая выборки
# на пространстве экзаменующей выборки построим набор
# последовательных значений VaR
VaR <- numeric()
T1 <- 6*260; T2 <- T - T1 # обучающая и экзаменующая выборки
# на пространстве экзаменующей выборки построим набор
# последовательных значений VaR
VaR <- numeric()
h <- 0.5*260
for (i in (T1+1):(T1+T2)) {
h.rets <- rets[(i-h):(i-1)]
rets.gfit <- garchFit(formula=~aparch(1,1),data=h.rets,
delta=2,include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.5,include.shape=FALSE,trace=FALSE)
rets.frc <- predict(rets.gfit,n.ahead=1)
VaR[i-T1] <- rets.frc[1,1]+rets.frc[1,3]*qsged(alpha,mean=0,sd=1,
nu=1.5,xi=rets.gfit@fit$par["skew"])
}
T1 <- 6*260; T2 <- T - T1 # обучающая и экзаменующая выборки
# на пространстве экзаменующей выборки построим набор
# последовательных значений VaR
VaR <- numeric()
h <- 0.5*260
for (i in (T1+1):(T1+T2)) {
h.rets <- as.numeric(rets[(i-h):(i-1)])
rets.gfit <- garchFit(formula=~aparch(1,1),data=h.rets,
delta=2,include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.5,include.shape=FALSE,trace=FALSE)
rets.frc <- predict(rets.gfit,n.ahead=1)
VaR[i-T1] <- rets.frc[1,1]+rets.frc[1,3]*qsged(alpha,mean=0,sd=1,
nu=1.5,xi=rets.gfit@fit$par["skew"])
}
length(rets)
VaR <- numeric()
h <- 0.5*260
for (i in (h+1):length(rets)) {
h.rets <- rets[(i-h):(i-1)]
rets.gfit <- garchFit(formula=~aparch(1,1),data=h.rets,
delta=2,include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.5,include.shape=FALSE,trace=FALSE)
rets.frc <- predict(rets.gfit,n.ahead=1)
VaR[i-T1] <- rets.frc[1,1]+rets.frc[1,3]*qsged(alpha,mean=0,sd=1,
nu=1.5,xi=rets.gfit@fit$par["skew"])
}
VaR <- numeric()
h <- 0.5*260
for (i in (h+1):length(rets)) {
h.rets <- rets[(i-h):(i-1)]
rets.gfit <- garchFit(formula=~aparch(1,1),data=h.rets,
delta=2,include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.5,include.shape=FALSE,trace=FALSE)
rets.frc <- predict(rets.gfit,n.ahead=1)
VaR_curve[i-h] <- rets.frc[1,1]+rets.frc[1,3]*qsged(alpha,mean=0,sd=1,
nu=1.5,xi=rets.gfit@fit$par["skew"])
}
# последовательных значений VaR
VaR_curve <- numeric()
h <- 0.5*260
for (i in (h+1):length(rets)) {
h.rets <- rets[(i-h):(i-1)]
rets.gfit <- garchFit(formula=~aparch(1,1),data=h.rets,
delta=2,include.delta=FALSE,leverage=TRUE,cond.dist="sged",
shape=1.5,include.shape=FALSE,trace=FALSE)
rets.frc <- predict(rets.gfit,n.ahead=1)
VaR_curve[i-h] <- rets.frc[1,1]+rets.frc[1,3]*qsged(alpha,mean=0,sd=1,
nu=1.5,xi=rets.gfit@fit$par["skew"])
}
VaR_curve
fact <- rets[(h+1):length(rets)]
plot(as.numeric(fact),type="l", ylab = "Return")
lines(VaR_curve,col="red")
K <- sum(fact<VaR); alpha0 <- K/T2
S <- -2*log((1-alpha)^(T2-K)*alpha^K)+
2*log((1-alpha0)^(T2-K)*alpha0^K)
p.value <- 1-pchisq(S,df=1)
##### Kupiec test #####
K <- sum(fact<VaR_curve); alpha0 <- K/length(rets)
S <- -2*log((1-alpha)^(length(rets)-K)*alpha^K)+
2*log((1-alpha0)^(length(rets)-K)*alpha0^K)
p.value <- 1-pchisq(S,df=1)
p.value
alpha0
alpha
